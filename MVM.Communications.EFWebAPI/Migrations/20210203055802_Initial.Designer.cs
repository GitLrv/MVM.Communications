// <auto-generated />
using System;
using MVM.Communications.EFWebAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVM.Communications.EFWebAPI.Migrations
{
    [DbContext(typeof(MVMComunicationsDataContext))]
    [Migration("20210203055802_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.ConsecutiveControl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConsecutiveLength")
                        .HasColumnName("Consecutive_Length")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateControl")
                        .HasColumnName("Date_Control")
                        .HasColumnType("datetime")
                        .HasComment("The last number asignated");

                    b.Property<int>("MsgTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int>("Sec")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MsgTypeId");

                    b.ToTable("ConsecutiveControl");
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FirsName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Mobil")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.ContactType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ContactType");
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.Digitalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreate")
                        .HasColumnName("Date_Create")
                        .HasColumnType("datetime");

                    b.Property<int>("MediaTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MsgRecordSec")
                        .HasColumnType("int");

                    b.Property<string>("ResourcePath")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.HasIndex("MediaTypeId");

                    b.HasIndex("MsgRecordSec");

                    b.ToTable("Digitalization");
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("ProfileId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.MediaType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MediaType");
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.MsgContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<int>("ContactTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MsgRecordSec")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.HasIndex("ContactTypeId");

                    b.HasIndex("MsgRecordSec");

                    b.ToTable("MsgContact");
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.MsgRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeliveredDate")
                        .HasColumnName("Delivered_Date")
                        .HasColumnType("datetime");

                    b.Property<bool>("Digitalization")
                        .HasColumnType("bit")
                        .HasComment("Determina si la comunicación ya fue digitalizada.");

                    b.Property<int>("DocManagerContactId")
                        .HasColumnType("int");

                    b.Property<int>("MsgStatusId")
                        .HasColumnType("int");

                    b.Property<int>("MsgTypeId")
                        .HasColumnType("int")
                        .HasComment("Communication Type");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<DateTime>("ReceivedDate")
                        .HasColumnName("Received_Date")
                        .HasColumnType("datetime");

                    b.Property<int>("Sec")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DocManagerContactId");

                    b.HasIndex("MsgStatusId");

                    b.HasIndex("MsgTypeId");

                    b.ToTable("MsgRecord");
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.MsgStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MsgStatus");
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.MsgType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MsgType");
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.ConsecutiveControl", b =>
                {
                    b.HasOne("MVM.Communications.EFWebAPI.Models.MsgType", "MsgType")
                        .WithMany("ConsecutiveControls")
                        .HasForeignKey("MsgTypeId")
                        .HasConstraintName("FK_ConsecutiveControl_MsgType")
                        .IsRequired();
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.Contact", b =>
                {
                    b.HasOne("MVM.Communications.EFWebAPI.Models.Employee", "Employee")
                        .WithMany("Contacts")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_Contacts_Employee1")
                        .IsRequired();
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.Department", b =>
                {
                    b.HasOne("MVM.Communications.EFWebAPI.Models.Organization", "Organization")
                        .WithMany("Departments")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("FK_Department_Organization")
                        .IsRequired();
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.Digitalization", b =>
                {
                    b.HasOne("MVM.Communications.EFWebAPI.Models.MediaType", "MediaType")
                        .WithMany("Digitalizations")
                        .HasForeignKey("MediaTypeId")
                        .HasConstraintName("FK_Digitalization_MediaType")
                        .IsRequired();

                    b.HasOne("MVM.Communications.EFWebAPI.Models.MsgRecord", "MsgRecordSecNavigation")
                        .WithMany("Digitalizations")
                        .HasForeignKey("MsgRecordSec")
                        .HasConstraintName("FK_Digitalization_MsgRecord")
                        .HasPrincipalKey("Sec")
                        .IsRequired();
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.Employee", b =>
                {
                    b.HasOne("MVM.Communications.EFWebAPI.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_Employee_Department")
                        .IsRequired();

                    b.HasOne("MVM.Communications.EFWebAPI.Models.Profile", "Profile")
                        .WithMany("Employees")
                        .HasForeignKey("ProfileId")
                        .HasConstraintName("FK_Employee_Profile")
                        .IsRequired();
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.MsgContact", b =>
                {
                    b.HasOne("MVM.Communications.EFWebAPI.Models.Contact", "Contact")
                        .WithMany("MsgContacts")
                        .HasForeignKey("ContactId")
                        .HasConstraintName("FK_MsgContact_Contacts")
                        .IsRequired();

                    b.HasOne("MVM.Communications.EFWebAPI.Models.ContactType", "ContactType")
                        .WithMany("MsgContacts")
                        .HasForeignKey("ContactTypeId")
                        .HasConstraintName("FK_MsgContact_ContactType")
                        .IsRequired();

                    b.HasOne("MVM.Communications.EFWebAPI.Models.MsgRecord", "MsgRecordSecNavigation")
                        .WithMany("MsgContacts")
                        .HasForeignKey("MsgRecordSec")
                        .HasConstraintName("FK_MsgContact_MsgRecord")
                        .HasPrincipalKey("Sec")
                        .IsRequired();
                });

            modelBuilder.Entity("MVM.Communications.EFWebAPI.Models.MsgRecord", b =>
                {
                    b.HasOne("MVM.Communications.EFWebAPI.Models.Contact", "DocManagerContact")
                        .WithMany("MsgRecords")
                        .HasForeignKey("DocManagerContactId")
                        .HasConstraintName("FK_MsgRecord_Contacts")
                        .IsRequired();

                    b.HasOne("MVM.Communications.EFWebAPI.Models.MsgStatus", "MsgStatus")
                        .WithMany("MsgRecords")
                        .HasForeignKey("MsgStatusId")
                        .HasConstraintName("FK_MsgRecord_MsgStatus")
                        .IsRequired();

                    b.HasOne("MVM.Communications.EFWebAPI.Models.MsgType", "MsgType")
                        .WithMany("MsgRecords")
                        .HasForeignKey("MsgTypeId")
                        .HasConstraintName("FK_MsgRecord_MsgType")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
